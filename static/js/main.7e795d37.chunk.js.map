{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","pages/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","to","TodoForm","props","useState","title","setTitle","onChange","event","target","value","onKeyPress","key","onAdd","id","type","placeholder","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","checked","onClick","preventDefault","removeHandler","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","window","confirm","filter","AboutPage","history","useHistory","App","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAiBeA,EAdU,WACvB,OACE,6BACE,yBAAKC,UAAU,eACb,uBAAGC,KAAK,IAAID,UAAU,cAAtB,cACA,wBAAIA,UAAU,8BACZ,4BAAI,kBAAC,IAAD,CAASE,GAAG,kBAAZ,4DACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,qE,wBCoBCC,EAxB2B,SAACC,GAAW,IAAD,EACzBC,mBAAiB,IADQ,mBAC5CC,EAD4C,KACrCC,EADqC,KAcnD,OACE,yBAAKP,UAAU,eACb,2BAAOQ,SAbW,SAACC,GACrBF,EAASE,EAAMC,OAAOC,QAYYC,WATZ,SAACH,GACL,UAAdA,EAAMI,MACRT,EAAMU,MAAMR,GACZC,EAAS,MAMoDI,MAAOL,EAAOS,GAAG,QAAQC,KAAK,OAAOC,YAAY,8EAC9G,2BAAOC,QAAQ,QAAQlB,UAAU,UAAjC,iGCeSmB,EA7B2B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5D,GAAqB,IAAjBF,EAAMG,OACR,OAAO,uBAAGvB,UAAU,UAAb,iEAQT,OACE,4BACGoB,EAAMI,KAAI,SAAAC,GACT,IAAMC,EAAU,CAAC,QAEjB,OADID,EAAKE,WAAWD,EAAQE,KAAK,aAE/B,wBAAIf,IAAKY,EAAKV,GAAIf,UAAW0B,EAAQG,KAAK,MACxC,+BACE,2BAAOb,KAAK,WAAWc,QAASL,EAAKE,UAAWnB,SAAU,kBAAMc,EAASG,EAAKV,OAC9E,8BAAOU,EAAKnB,OACZ,uBAAGN,UAAU,0BAA0B+B,QAAS,SAAAtB,GAAK,OAf3C,SAACA,EAAyBM,GAC9CN,EAAMuB,iBACNX,EAASN,GAa0DkB,CAAcxB,EAAOgB,EAAKV,MAAnF,iBCwBCmB,EAhDa,WAAO,IAAD,EACN7B,mBAAkB,IADZ,mBACzBe,EADyB,KAClBe,EADkB,KAGhCC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAC1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUvB,MAC5C,CAACA,IA8BJ,OACE,6BACE,kBAAC,EAAD,CAAUN,MA9BK,SAACR,GAClB,IAAMsC,EAAiB,CACrBtC,QACAS,GAAI8B,KAAKC,MACTnB,WAAW,GAEbQ,GAAS,SAAAY,GAAI,OAAKH,GAAL,mBAAiBG,UAyB5B,kBAAC,EAAD,CAAU3B,MAAOA,EAAOC,SAVN,SAACN,GACAiC,OAAOC,QAAQ,yKAElCd,GAAS,SAAAY,GAAI,OAAIA,EAAKG,QAAO,SAAAzB,GAAI,OAAIA,EAAKV,KAAOA,SAOAO,SAtB/B,SAACP,GACrBoB,GAAS,SAAAY,GAAI,OAAIA,EAAKvB,KAAI,SAAAC,GACxB,OAAIA,EAAKV,KAAOA,EACP,2BACFU,GADL,IAEEE,WAAYF,EAAKE,YAGdF,aCtBE0B,EATa,WAC1B,IAAMC,EAAUC,cAChB,OACE,6BACE,4BAAQrD,UAAU,MAAM+B,QAAS,kBAAMqB,EAAQxB,KAAK,oBAApD,aCcS0B,EAfO,WAEpB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKtD,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuD,UAAWrB,EAAWsB,KAAK,iBAAiBC,OAAK,IACxD,kBAAC,IAAD,CAAOF,UAAWJ,EAAWK,KAAK,SAASC,OAAK,QCT1DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7e795d37.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <a href=\"/\" className=\"brand-logo\">TypeScript</a>\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/todo-react-ts\">Список дел</NavLink></li>\r\n          <li><NavLink to=\"/about\">Информация</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\n\r\ninterface TodoFormProps {\r\n  onAdd(title: string): void\r\n}\r\n\r\nconst TodoForm: React.FC<TodoFormProps> = (props) => {\r\n  const [title, setTitle] = useState<string>('')\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const keyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter') {\r\n      props.onAdd(title)\r\n      setTitle('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <input onChange={changeHandler} onKeyPress={keyPressHandler} value={title} id=\"title\" type=\"text\" placeholder=\"Помыть машину\" />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Заголовок задачи\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\nimport { ITodo } from '../interfaces'\r\n\r\ninterface TodoListProps {\r\n  todos: ITodo[],\r\n  onToggle(id: number): void,\r\n  onRemove(id: number): void\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle }) => {\r\n  if (todos.length === 0) {\r\n    return <p className=\"center\">Список пуст</p>\r\n  }\r\n\r\n  const removeHandler = (event: React.MouseEvent, id: number) => {\r\n    event.preventDefault()\r\n    onRemove(id)\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {todos.map(todo => {\r\n        const classes = ['todo']\r\n        if (todo.completed) classes.push('completed')\r\n        return (\r\n          <li key={todo.id} className={classes.join(' ')}>\r\n            <label>\r\n              <input type=\"checkbox\" checked={todo.completed} onChange={() => onToggle(todo.id)} />\r\n              <span>{todo.title}</span>\r\n              <i className=\"material-icons red-text\" onClick={event => removeHandler(event, todo.id)}>delete</i>\r\n            </label>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useEffect } from 'react'\r\nimport TodoForm from '../components/TodoForm';\r\nimport TodoList from '../components/TodoList';\r\nimport { ITodo } from '../interfaces'\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n    setTodos(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title,\r\n      id: Date.now(),\r\n      completed: false\r\n    }\r\n    setTodos(prev => [newTodo, ...prev])\r\n  }\r\n\r\n  const toggleHandler = (id: number) => {\r\n    setTodos(prev => prev.map(todo => {\r\n      if (todo.id === id) {\r\n        return {\r\n          ...todo,\r\n          completed: !todo.completed\r\n        }\r\n      }\r\n      return todo\r\n    }))\r\n  }\r\n\r\n  const removeHandler = (id: number) => {\r\n    const shouldRemove = window.confirm(\"Подтвердите удаление элемента\")\r\n    if (shouldRemove) {\r\n      setTodos(prev => prev.filter(todo => todo.id !== id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TodoForm onAdd={addHandler} />\r\n      <TodoList todos={todos} onRemove={removeHandler} onToggle={toggleHandler} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodosPage\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AboutPage: React.FC = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <div>\r\n      <button className=\"btn\" onClick={() => history.push('/todo-react-ts')}>To List</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/Navbar';\nimport TodosPage from './pages/TodosPage';\nimport AboutPage from './pages/AboutPage';\n\nconst App: React.FC = () => {\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodosPage} path=\"/todo-react-ts\" exact />\n          <Route component={AboutPage} path=\"/about\" exact />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}